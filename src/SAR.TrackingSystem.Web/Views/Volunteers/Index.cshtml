@model PaginatedResponse<VolunteerViewModel>
@{
    ViewData["Title"] = "Ekip Üyeleri";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="bi bi-people"></i> Ekip Üyeleri</h2>
    <div class="d-flex gap-2">
        <form method="get" class="d-flex">
            <input type="search" name="search" value="@ViewBag.SearchTerm" 
                   class="form-control me-2" placeholder="Ad, soyad veya TC ile ara..." 
                   style="min-width: 250px;">
            <button type="submit" class="btn btn-outline-secondary">
                <i class="bi bi-search"></i>
            </button>
            @if (!string.IsNullOrEmpty(ViewBag.SearchTerm as string))
            {
                <a href="/volunteers" class="btn btn-outline-danger ms-1">
                    <i class="bi bi-x"></i>
                </a>
            }
        </form>
        <a href="/volunteers/create" class="btn btn-primary">
            <i class="bi bi-person-plus"></i> Yeni Ekip Üyesi
        </a>
    </div>
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        @TempData["Success"]
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        @TempData["Error"]
    </div>
}

<div class="card">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>TC Kimlik</th>
                        <th>Ad Soyad</th>
                        <th>Tim</th>
                        <th>Kan Grubu</th>
                        <th>Telefon</th>
                        <th>İşlemler</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var volunteer in Model.Items)
                    {
                        <tr>
                            <td><code>@volunteer.TcKimlik</code></td>
                            <td><strong>@volunteer.FullName</strong></td>
                            <td><span class="badge bg-info">@volunteer.TeamName</span></td>
                            <td><span class="badge bg-danger">@volunteer.BloodType</span></td>
                            <td>@volunteer.Phone</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a href="/volunteers/edit/@volunteer.Id" class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <button type="button" class="btn btn-sm btn-outline-danger" 
                                            onclick="deleteVolunteer('@volunteer.Id')">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @if (Model.TotalPages > 1)
        {
            <nav>
                <ul class="pagination justify-content-center">
                    @* İlk sayfa *@
                    @if (Model.Page > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=1@(!string.IsNullOrEmpty(ViewBag.SearchTerm) ? $"&search={ViewBag.SearchTerm}" : "")">İlk</a>
                        </li>
                    }
                    
                    @* Önceki sayfa *@
                    @if (Model.Page > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@(Model.Page - 1)@(!string.IsNullOrEmpty(ViewBag.SearchTerm) ? $"&search={ViewBag.SearchTerm}" : "")">‹</a>
                        </li>
                    }
                    
                    @* Sayfa numaraları (mevcut sayfanın çevresinde 5 sayfa) *@
                    @{
                        var startPage = Math.Max(1, Model.Page - 2);
                        var endPage = Math.Min(Model.TotalPages, Model.Page + 2);
                    }
                    
                    @for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(i == Model.Page ? "active" : "")">
                            <a class="page-link" href="?page=@i@(!string.IsNullOrEmpty(ViewBag.SearchTerm) ? $"&search={ViewBag.SearchTerm}" : "")">@i</a>
                        </li>
                    }
                    
                    @* Sonraki sayfa *@
                    @if (Model.Page < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@(Model.Page + 1)@(!string.IsNullOrEmpty(ViewBag.SearchTerm) ? $"&search={ViewBag.SearchTerm}" : "")">›</a>
                        </li>
                    }
                    
                    @* Son sayfa *@
                    @if (Model.Page < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@Model.TotalPages@(!string.IsNullOrEmpty(ViewBag.SearchTerm) ? $"&search={ViewBag.SearchTerm}" : "")">Son (@Model.TotalPages)</a>
                        </li>
                    }
                </ul>
                
                <div class="text-center mt-2">
                    <small class="text-muted">
                        Sayfa @Model.Page / @Model.TotalPages - 
                        Toplam @Model.TotalCount ekip üyesi
                    </small>
                </div>
            </nav>
        }
    </div>
</div>

@section Scripts {
    <script>
        function deleteVolunteer(id) {
            if (confirm('Bu ekip üyesini silmek istediğinizden emin misiniz?')) {
                fetch(`/volunteers/delete/${id}`, {
                    method: 'POST'
                }).then(() => {
                    location.reload();
                });
            }
        }
    </script>
}
